<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.studentInformation.mapper.StudentMapper">
    <resultMap type="Student" id="StudentResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="student_id"    />
        <result property="name"    column="name"    />
        <result property="sex"    column="sex"    />
        <result property="clazz"    column="clazz"    />
        <result property="department"    column="department"    />
        <result property="birthday"    column="birthday"    />
        <result property="nativePlace"    column="native_place"    />
    </resultMap>

    <sql id="selectStudentVo">
        select id, student_id, name, sex, clazz, department, birthday, native_place from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        <where>
            <if test="studentId != null  and studentId != ''"> and student_id = #{studentId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="clazz != null "> and clazz = #{clazz}</if>
            <if test="department != null "> and department = #{department}</if>
            <if test="birthday != null "> and birthday = #{birthday}</if>
            <if test="nativePlace != null  and nativePlace != ''"> and native_place = #{nativePlace}</if>
        </where>
    </select>

    <select id="selectStudentById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where id = #{id}
    </select>

    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">student_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="sex != null and sex != ''">sex,</if>
            <if test="clazz != null">clazz,</if>
            <if test="department != null">department,</if>
            <if test="birthday != null">birthday,</if>
            <if test="nativePlace != null">native_place,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">#{studentId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="sex != null and sex != ''">#{sex},</if>
            <if test="clazz != null">#{clazz},</if>
            <if test="department != null">#{department},</if>
            <if test="birthday != null">#{birthday},</if>
            <if test="nativePlace != null">#{nativePlace},</if>
        </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null and studentId != ''">student_id = #{studentId},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="clazz != null">clazz = #{clazz},</if>
            <if test="department != null">department = #{department},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="nativePlace != null">native_place = #{nativePlace},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStudentById" parameterType="Long">
        delete from student where id = #{id}
    </delete>

    <delete id="deleteStudentByIds" parameterType="String">
        delete from student where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>